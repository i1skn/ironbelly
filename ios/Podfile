require File.join(File.dirname(`node --print "require.resolve('expo/package.json')"`), "scripts/autolinking")
require_relative '../node_modules/react-native/scripts/react_native_pods'
require_relative '../node_modules/@react-native-community/cli-platform-ios/native_modules'

platform :ios, '13'
install! 'cocoapods', :deterministic_uuids => false

# Post Install processing for Grin Wallet 
def grin_wallet_post_install(installer)
  installer.pods_project.targets.each do |target|
    if target.name == 'YogaKit'
      target.build_configurations.each do |config|
        config.build_settings['SWIFT_VERSION'] = '4.1'
      end
    end
  end
  file_name = Dir.glob("*.xcodeproj")[0]
  app_project = Xcodeproj::Project.open(file_name)
  app_project.native_targets.each do |target|
    target.build_configurations.each do |config|
      ldflags = config.build_settings['OTHER_LDFLAGS'] || '$(inherited) '
      unless ldflags.include? 'IOKit'
        puts 'Adding -framework IOKit in OTHER_LDFLAGS...'
        ldflags << '-framework IOKit'
      end
      config.build_settings['OTHER_LDFLAGS'] = ldflags
    end
    app_project.save
  end
  installer.pods_project.save
end


# Post Install for Countly 
# def countly_post_install(installer)
#   installer.pods_project.targets.each do |target|
#     if target.name == "Countly"
#       target.build_configurations.each do |config|
#           config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] ||= ['$(inherited)', 'COUNTLY_EXCLUDE_IDFA=1']
#       end
#     end
#   end
# end


target 'Ironbelly' do

  use_expo_modules!
  post_integrate do |installer|
    begin
      expo_patch_react_imports!(installer)
    rescue => e
      Pod::UI.warn e
    end
  end
  config = use_native_modules!

  # Flags change depending on the env values.
  flags = get_default_flags()

  use_react_native!(
    :path => config[:reactNativePath],
    # Hermes is now enabled by default. Disable by setting this flag to false.
    # Upcoming versions of React Native may rely on get_default_flags(), but
    # we make it explicit here to aid in the React Native upgrade process.
    :hermes_enabled => true,
    :fabric_enabled => flags[:fabric_enabled],
    # Enables Flipper.
    #
    # Note that if you have use_frameworks! enabled, Flipper will not work and
    # you should disable the next line.
    :flipper_configuration => FlipperConfiguration.enabled,
    # An absolute path to your application root.
    :app_path => "#{Pod::Config.instance.installation_root}/.."
  )

  # Add new pods below this line
  pod 'LaunchScreenSnapshot'
  pod 'ReachabilitySwift'
  pod 'ZXingObjC', '~> 3.6.5'

  # $static_framework = ['CocoaAsyncSocket', 'Flipper', 'Flipper-Boost-iOSX',
    # 'Flipper-DoubleConversion', 'Flipper-Fmt' ,'Flipper-Folly',
    # 'Flipper-Glog', 'Flipper-PeerTalk', 'Flipper-RSocket', 'FlipperKit',
    # 'OpenSSL-Universal','YogaKit', 'libevent']
 
  # pre_install do |installer|
    # Pod::Installer::Xcode::TargetValidator.send(:define_method, :verify_no_static_framework_transitive_dependencies) {}
    # installer.pod_targets.each do |pod|
        # if $static_framework.include?(pod.name)
          # def pod.build_type;
            # Pod::BuildType.static_library
          # end
        # end
      # end
  # end

  post_install do |installer|
    # countly_post_install(installer)
    grin_wallet_post_install(installer)
    react_native_post_install(
      installer,
      # Set `mac_catalyst_enabled` to `true` in order to apply patches
      # necessary for Mac Catalyst builds
      :mac_catalyst_enabled => false
    )
    # __apply_Xcode_12_5_M1_post_install_workaround(installer)
  end
end
